#!/bin/bash
VERSION="1.1"
SELF="$(basename "$0")"

version() {
  echo -e "$SELF version $VERSION"
}

usage() {
  echo -e "USAGE:\n\n\t$SELF DEPENDENCIES_FILE PACKAGE_MANAGER\n"
}

options() {
  echo -e "OPTIONS\n"
  echo -e "\t-V, --version\t\tShow $SELF version number"
  echo -e "\t-h, --help\t\tShow this help"
}

help() {
  version
  usage
  options
}

dependencies_file="$1"
package_manager="${2:-}"

# parse_yaml function by Stefan Farestam, with some small changes by me
function parse_yaml {
  local prefix=$2
  local s='[[:space:]]*' w='[^ ]*' fs=$(echo @|tr @ '\034')

 sed -ne "s|^\($s\):|\1|
   s|^\($s\)\($w\)$s\(:\)$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\4$fs\3|p
    t end
    s|^\($s\)\($w\)$s\(:\)$s\(.*\)$s\$|\1$fs\2$fs\4$fs\3|p
    t end
    /:/! s|^\($s\)\($w\)$s$|\1$fs\2|p
    t end
    :end
    " "$1" |
  awk -F$fs '{
      indent = length($1)/2;
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
        if (length($3) == 0) {
          $3 = $2
          if ($4 == ":") {
            next
          }
        }
      vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])(" ")}

    gsub(/[^A-Za-z0-9 ]/, "0", vn)
    gsub(/[^A-Za-z0-9]/, "0", $2)

    gsub(" ", "_", vn)

    if (length(vn) == 0) {
      vn=$2"_"
      $2="other"
    }


    printf("%s%s%s=\"%s\"\n", "'$prefix'",vn, $2, $3);
  }'
}

# Main logic
if [ $# -le 0 ]; then
  help
  exit 0
fi

while [[ "$1" == -* ]]; do
  case "$1" in
    -h|--help)
      help
      exit 0
      ;;
    -V|--version)
      version
      exit 0
      ;;
    --)
      shift
      break
      ;;
  esac
  shift
done

parse_result="$(parse_yaml "$dependencies_file" "DEP_")"

eval $parse_result

result=""

while IFS="" read -r line; do
  varname="DEP_${line}_${package_manager}"
  if [[ -z "${!varname}" ]]; then
    varname="DEP_${line}_other"
  fi

  result="$result$(echo -n "${!varname}") "
done <<< "$(echo -e "$parse_result" | sed -E 's/^DEP_([^_]*).*/\1/' | awk '!a[$0]++')"

echo "$result" | sed 's/[[:space:]]+/ /g'
